{"ast":null,"code":"import { SET_ACTIVE_CHARACTER, ADD_CHARACTER, SET_ANGLE } from \"./actionTypes\";\nconst initialState = {\n  characters: [{\n    id: \"sprite0\",\n    angle: 0\n  }],\n  active: \"sprite0\"\n};\nexport const characterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_CHARACTER:\n      return {\n        ...state,\n        active: action.id\n      };\n    case ADD_CHARACTER:\n      let charactersArray = state.characters;\n      charactersArray.push({\n        id: `sprite${state.characters.length}`,\n        angle: 0\n      });\n      return {\n        ...state,\n        characters: charactersArray\n      };\n    case SET_ANGLE:\n      let characters_Array = state.characters;\n      let curr_character = characters_Array.find(character => character.id === state.active);\n      const curr_character_index = characters_Array.findIndex(character => character.id === state.active);\n      if (curr_character_index > -1) {\n        curr_character.angle = action.angle;\n        characters_Array[curr_character_index] = curr_character;\n      }\n      return {\n        ...state,\n        characters: characters_Array\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["SET_ACTIVE_CHARACTER","ADD_CHARACTER","SET_ANGLE","initialState","characters","id","angle","active","characterReducer","state","action","type","charactersArray","push","length","characters_Array","curr_character","find","character","curr_character_index","findIndex"],"sources":["C:/Users/saksh/Downloads/MIT Clone/src/redux/character/characterReducer.js"],"sourcesContent":["import { SET_ACTIVE_CHARACTER, ADD_CHARACTER, SET_ANGLE } from \"./actionTypes\";\n\nconst initialState = {\n  characters: [{ id: \"sprite0\", angle: 0 }],\n  active: \"sprite0\",\n};\n\nexport const characterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_CHARACTER:\n      return {\n        ...state,\n        active: action.id,\n      };\n\n    case ADD_CHARACTER:\n      let charactersArray = state.characters;\n      charactersArray.push({\n        id: `sprite${state.characters.length}`,\n        angle: 0,\n      });\n\n      return {\n        ...state,\n        characters: charactersArray,\n      };\n\n    case SET_ANGLE:\n      let characters_Array = state.characters;\n      let curr_character = characters_Array.find(\n        (character) => character.id === state.active\n      );\n      const curr_character_index = characters_Array.findIndex(\n        (character) => character.id === state.active\n      );\n      if (curr_character_index > -1) {\n        curr_character.angle = action.angle;\n        characters_Array[curr_character_index] = curr_character;\n      }\n      return {\n        ...state,\n        characters: characters_Array,\n      };\n\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,oBAAoB,EAAEC,aAAa,EAAEC,SAAS,QAAQ,eAAe;AAE9E,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,CAAC;IAAEC,EAAE,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC;EACzCC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EAChE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKX,oBAAoB;MACvB,OAAO;QACL,GAAGS,KAAK;QACRF,MAAM,EAAEG,MAAM,CAACL;MACjB,CAAC;IAEH,KAAKJ,aAAa;MAChB,IAAIW,eAAe,GAAGH,KAAK,CAACL,UAAU;MACtCQ,eAAe,CAACC,IAAI,CAAC;QACnBR,EAAE,EAAE,SAASI,KAAK,CAACL,UAAU,CAACU,MAAM,EAAE;QACtCR,KAAK,EAAE;MACT,CAAC,CAAC;MAEF,OAAO;QACL,GAAGG,KAAK;QACRL,UAAU,EAAEQ;MACd,CAAC;IAEH,KAAKV,SAAS;MACZ,IAAIa,gBAAgB,GAAGN,KAAK,CAACL,UAAU;MACvC,IAAIY,cAAc,GAAGD,gBAAgB,CAACE,IAAI,CACvCC,SAAS,IAAKA,SAAS,CAACb,EAAE,KAAKI,KAAK,CAACF,MACxC,CAAC;MACD,MAAMY,oBAAoB,GAAGJ,gBAAgB,CAACK,SAAS,CACpDF,SAAS,IAAKA,SAAS,CAACb,EAAE,KAAKI,KAAK,CAACF,MACxC,CAAC;MACD,IAAIY,oBAAoB,GAAG,CAAC,CAAC,EAAE;QAC7BH,cAAc,CAACV,KAAK,GAAGI,MAAM,CAACJ,KAAK;QACnCS,gBAAgB,CAACI,oBAAoB,CAAC,GAAGH,cAAc;MACzD;MACA,OAAO;QACL,GAAGP,KAAK;QACRL,UAAU,EAAEW;MACd,CAAC;IAEH;MACE,OAAON,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}