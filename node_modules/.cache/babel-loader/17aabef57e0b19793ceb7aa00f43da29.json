{"ast":null,"code":"import { ADD_LIST, SET_LIST } from \"./types\";\nconst initialState = {\n  midAreaLists: [{\n    id: \"midAreaList-0\",\n    comps: [\"MOVE\"]\n  }]\n};\nexport const listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LIST:\n      let index = state.midAreaLists.findIndex(x => x.id === action.id);\n      let all_lists = state.midAreaLists;\n      let [item] = all_lists.splice(index, 1);\n      item.comps = action.list;\n      all_lists.splice(index, 0, item);\n      return {\n        midAreaLists: all_lists\n      };\n    case ADD_LIST:\n      let old_list = state.midAreaLists;\n      let new_list_add = {\n        id: `midAreaList-${state.midAreaLists.length}`,\n        comps: [\"MOVE\"]\n      };\n      old_list.push(new_list_add);\n      return {\n        midAreaLists: old_list\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ADD_LIST","SET_LIST","initialState","midAreaLists","id","comps","listReducer","state","action","type","index","findIndex","x","all_lists","item","splice","list","old_list","new_list_add","length","push"],"sources":["C:/Users/Dell/Desktop/MIT Clone/MIT Clone/src/redux/midarea/list.js"],"sourcesContent":["import { ADD_LIST, SET_LIST } from \"./types\";\n\nconst initialState = {\n  midAreaLists: [\n    {\n      id: \"midAreaList-0\",\n      comps: [\"MOVE\"],\n    },\n  ],\n};\n\nexport const listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LIST:\n      let index = state.midAreaLists.findIndex((x) => x.id === action.id);\n      let all_lists = state.midAreaLists;\n      let [item] = all_lists.splice(index, 1);\n      item.comps = action.list;\n      all_lists.splice(index, 0, item);\n\n      return {\n        midAreaLists: all_lists,\n      };\n\n    case ADD_LIST:\n      let old_list = state.midAreaLists;\n      let new_list_add = {\n        id: `midAreaList-${state.midAreaLists.length}`,\n        comps: [\"MOVE\"],\n      };\n      old_list.push(new_list_add);\n      return {\n        midAreaLists: old_list,\n      };\n\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,SAAS;AAE5C,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,CACZ;IACEC,EAAE,EAAE,eAAe;IACnBC,KAAK,EAAE,CAAC,MAAM;EAChB,CAAC;AAEL,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EAC3D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,QAAQ;MACX,IAAIS,KAAK,GAAGH,KAAK,CAACJ,YAAY,CAACQ,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACR,EAAE,KAAKI,MAAM,CAACJ,EAAE,CAAC;MACnE,IAAIS,SAAS,GAAGN,KAAK,CAACJ,YAAY;MAClC,IAAI,CAACW,IAAI,CAAC,GAAGD,SAAS,CAACE,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;MACvCI,IAAI,CAACT,KAAK,GAAGG,MAAM,CAACQ,IAAI;MACxBH,SAAS,CAACE,MAAM,CAACL,KAAK,EAAE,CAAC,EAAEI,IAAI,CAAC;MAEhC,OAAO;QACLX,YAAY,EAAEU;MAChB,CAAC;IAEH,KAAKb,QAAQ;MACX,IAAIiB,QAAQ,GAAGV,KAAK,CAACJ,YAAY;MACjC,IAAIe,YAAY,GAAG;QACjBd,EAAE,EAAE,eAAeG,KAAK,CAACJ,YAAY,CAACgB,MAAM,EAAE;QAC9Cd,KAAK,EAAE,CAAC,MAAM;MAChB,CAAC;MACDY,QAAQ,CAACG,IAAI,CAACF,YAAY,CAAC;MAC3B,OAAO;QACLf,YAAY,EAAEc;MAChB,CAAC;IAEH;MACE,OAAOV,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}